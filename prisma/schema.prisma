generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  minecraftUUID   String?   @unique
  minecraftPseudo String?
  microsoftToken  String?
  role            Role      @default(USER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  accounts        Account[]
  sessions        Session[]
}

enum Role {
  USER
  MODERATOR
  ADMIN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Formulaire {
  id                  String  @id @default(cuid())
  discordPseudo       String
  email               String
  ageIRL              Int
  decouverteViking    String
  originePersonnage   String
  ageRP               Int
  nomPersonnage       String
  metierPrincipal     String
  taillePersonnage    String
  histoirePersonnage  String
  descriptionPhysique String
  competences         Json
  apportRoleplay      String
  projets             String
  reglementLu         Boolean @default(false)
  loreLu              Boolean @default(false)
  pseudoParrain       String?
}
